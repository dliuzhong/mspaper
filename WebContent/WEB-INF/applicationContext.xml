<?xml version="1.0" encoding="utf-8"?>
<!-- Spring配置文件的根元素，并指定Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/mspaper"
		p:user="root"
		p:password="123"
		p:maxPoolSize="200"
		p:minPoolSize="2"
		p:initialPoolSize="2"
		p:maxIdleTime="2000"
		destroy-method="close"/>

	<!-- 定义Hibernate的SessionFactory 
		并为它注入数据源，注入Hibernate配置文件等。-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
	
		<property name="annotatedClasses">
			<list>
				<value>cn.mnu.paper.domain.Admin</value>
				<value>cn.mnu.paper.domain.Paper</value>
				<value>cn.mnu.paper.domain.Layout</value>
				<value>cn.mnu.paper.domain.News</value>
				<value>cn.mnu.paper.domain.Comment</value>
				<value>cn.mnu.paper.domain.Subject</value>
				<value>cn.mnu.paper.domain.Msuser</value>
				<value>cn.mnu.paper.domain.Department</value>
				<value>cn.mnu.paper.domain.Article</value>
				<value>cn.mnu.paper.domain.ArticleType</value>
				<value>cn.mnu.paper.domain.ArticleStatus</value>
			</list>
		</property>
		
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<prop key="hibernate.show_sql">false</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
			</props>
		</property>
	</bean>


	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
	<bean id="transactionManager" class=
		"org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>

	<!-- 配置事务切面Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配指定包下所有以Impl结尾的类执行的所有方法 -->
		<aop:pointcut id="paperService"
			expression="execution(* cn.mnu.paper.service.impl.*Impl.*(..))"/>
		<!-- 指定在leeService切入点应用txAdvice事务切面 -->
		<aop:advisor advice-ref="txAdvice" 
			pointcut-ref="paperService"/>
	</aop:config>

	
	
	
	<!-- 配置业务逻辑组件 -->
	<!-- 为业务逻辑组件注入所需的DAO组件 -->
	<bean id="adminmgr"
		class="cn.mnu.paper.service.impl.AdminManagerImpl"
		p:adminDao-ref="adminDao" />
		<!-- 为业务逻辑组件注入所需的DAO组件 -->
	<bean id="papermgr"
		class="cn.mnu.paper.service.impl.PaperManagerImpl"
		p:paperDao-ref="paperDao" />
	<bean id="layoutmgr"
		class="cn.mnu.paper.service.impl.LayoutManagerImpl"
		p:paperDao-ref="paperDao"
		p:layoutDao-ref="layoutDao"
		p:newsDao-ref="newsDao" />
	<bean id="newsmgr"
		class="cn.mnu.paper.service.impl.NewsManagerImpl"
		p:paperDao-ref="paperDao"
		p:layoutDao-ref="layoutDao"
		p:newsDao-ref="newsDao"
		p:subjectDao-ref="subjectDao" />
	<bean id="subjectmgr"
		class="cn.mnu.paper.service.impl.SubjectManagerImpl"
		p:subjectDao-ref="subjectDao"/>
	<bean id="commentmgr"
		class="cn.mnu.paper.service.impl.CommentManagerImpl"
		p:commentDao-ref="commentDao"
		p:newsDao-ref="newsDao" />
	<bean id="msusermgr"
		class="cn.mnu.paper.service.impl.MsuserManagerImpl"
		p:msuserDao-ref="msuserDao"
		p:departmentDao-ref="departmentDao"/>
	<bean id="departmentmgr"
		class="cn.mnu.paper.service.impl.DepartmentManagerImpl"
		p:departmentDao-ref="departmentDao" />
	<bean id="articleTypemgr"
		class="cn.mnu.paper.service.impl.ArticleTypeManagerImpl"
		p:articleTypeDao-ref="articleTypeDao" />
	<bean id="articlemgr"
		class="cn.mnu.paper.service.impl.ArticleManagerImpl"
		p:articleDao-ref="articleDao"
		p:articleStatusDao-ref="articleStatusDao"
		p:articleTypeDao-ref="articleTypeDao"
		p:msuserDao-ref="msuserDao"
		p:adminDao-ref="adminDao" />
			
		
</beans>